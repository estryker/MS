var search_data = {"index":{"searchIndex":["clientsqueak","mapsqueaksession","object","duration=()","get_my_squeaks()","get_squeaks()","latitude=()","longitude=()","new()","new()","post_squeak()","sign_in()","sign_out()","text=()","to_hash()","to_json()","to_s()","to_xml()","xml_element()","readme"],"longSearchIndex":["clientsqueak","mapsqueaksession","object","clientsqueak#duration=()","mapsqueaksession#get_my_squeaks()","mapsqueaksession#get_squeaks()","clientsqueak#latitude=()","clientsqueak#longitude=()","clientsqueak::new()","mapsqueaksession::new()","mapsqueaksession#post_squeak()","mapsqueaksession#sign_in()","mapsqueaksession#sign_out()","clientsqueak#text=()","clientsqueak#to_hash()","clientsqueak#to_json()","clientsqueak#to_s()","clientsqueak#to_xml()","clientsqueak#xml_element()",""],"info":[["ClientSqueak","","ClientSqueak.html","","<p>ClientSqueak - a class that encapsulates a client side squeak Note that if\nI am not the owner of a squeak, …\n"],["MapSqueakSession","","MapSqueakSession.html","","<p>MapSqueakSession - an class that encapsulates a session with the mapsqueak\nserver.\n"],["Object","","Object.html","",""],["duration=","ClientSqueak","ClientSqueak.html#method-i-duration-3D","(duration)","<p>set the time to live for the squeak must be between @@min_duration and\n@@max_duration\n"],["get_my_squeaks","MapSqueakSession","MapSqueakSession.html#method-i-get_my_squeaks","(center_lat,center_long,max = 100,format=:json)","<p>not implemented yet\n"],["get_squeaks","MapSqueakSession","MapSqueakSession.html#method-i-get_squeaks","(center_latitude,center_longitude,max = 100,format=:json)","<p>get a list of no more than max squeaks closest to the given\ncenter_latitude/centerlongitude The format …\n"],["latitude=","ClientSqueak","ClientSqueak.html#method-i-latitude-3D","(latitude)","<p>set the latitude for the squeak must be between  @@min_latitude and\n@@max_latitude\n"],["longitude=","ClientSqueak","ClientSqueak.html#method-i-longitude-3D","(longitude)","<p>set the longitude for the squeak must be between @@min_longitude and\n@@max_longitude\n"],["new","ClientSqueak","ClientSqueak.html#method-c-new","(squeak)","<p>Initialize a new squeak which must be in an allowable format:  json - a\nString representation of a JSON …\n"],["new","MapSqueakSession","MapSqueakSession.html#method-c-new","(host = 'http://mapsqueak.heroku.com', username=nil,password=nil)",""],["post_squeak","MapSqueakSession","MapSqueakSession.html#method-i-post_squeak","(squeak,send_format = :xml)","<p>post a new squeak. the squeak can either be whatever the ClientSqueak\nconstructor accepts -  a String …\n"],["sign_in","MapSqueakSession","MapSqueakSession.html#method-i-sign_in","(username,password)","<p>not implemented yet\n"],["sign_out","MapSqueakSession","MapSqueakSession.html#method-i-sign_out","()","<p>not implemented yet\n"],["text=","ClientSqueak","ClientSqueak.html#method-i-text-3D","(txt)","<p>set the message portion of the squeak length can’t exceed @@max_text_length\n"],["to_hash","ClientSqueak","ClientSqueak.html#method-i-to_hash","()","<p>convert the squeak to a Hash\n"],["to_json","ClientSqueak","ClientSqueak.html#method-i-to_json","()","<p>convert the squeak to JSON format\n\n<pre>e.g. {\\&quot;squeak\\&quot;:{\\&quot;latitude\\&quot;:\\&quot;54.1\\&quot;,\\&quot;longitude\\&quot;:\\&quot;-1.7\\&quot;,\\&quot;duration\\&quot;:\\&quot;2\\&quot;,\\&quot;text\\&quot;:\\&quot;Another ...</pre>\n"],["to_s","ClientSqueak","ClientSqueak.html#method-i-to_s","()","<p>simply use to_s on the Hash representation\n"],["to_xml","ClientSqueak","ClientSqueak.html#method-i-to_xml","()","<p>convert the squeak to XML format e.g.\n&lt;squeak&gt;&lt;latitude&gt;54.1&lt;/latitude&gt;&lt;longitude&gt; …\n"],["xml_element","ClientSqueak","ClientSqueak.html#method-i-xml_element","(tag,text=nil)",""],["README","","README.html","","<p>mapsqueak - a reference implementation for MapSqueak clients\n<p>Mapsqueak itself is an application that allows …\n"]]}}